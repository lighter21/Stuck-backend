extend type Mutation {
    UpdateOrCreateFriend(id: ID!, friend_id: ID!, status: String!): User
    ChangeUserPassword(input: ChangePasswordInput!): User
    updateUserGeneralData(id: ID!, input: UpdateUserGeneralDataInput! @spread): User @update
}

extend type Query {
    user(username: String @eq): User @find
    users: [User!]! @all
    suggestedFriends(user_id: ID! @scope(name: "suggestedFriends")): [User!]! @all
}

type User {
    id: ID!
    first_name: String!
    second_name: String
    password: String!
    last_name: String!
    username: String!
    email: String!
    birth_date: Date
    avatar: String
    parsed_avatar_path: String
    created_at: DateTime!
    updated_at: DateTime!
    posts: [Post]! @hasMany
    friends: [User] @belongsToMany
}

input RespondToInvitationInput {
    friend_id: ID!
    status: String!
}

input UpdateUserGeneralDataInput {
    first_name: String!
    second_name: String
    last_name: String!
    email: String!
    birth_date: Date
    avatar: String
}

input ChangePasswordInput {
    old_password: String!
    password: String! @rules(apply: ["required", "confirmed", "min:8"])
    password_confirmation: String!
}
